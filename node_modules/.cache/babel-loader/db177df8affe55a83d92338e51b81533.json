{"ast":null,"code":"import redux from \"redux\";\n\nconst counterReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    counter: 0\n  };\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type === \"increment\") {\n    return {\n      coutner: state.counter + 1\n    };\n  }\n\n  if (action.type === \"decrement\") {\n    return {\n      counter: state.counter - 1\n    };\n  }\n\n  return state;\n}; // Redux toolkit advices to replace configStore with createStore\n\n\nconst store = createStore(counterReducer);\nexport default store;","map":{"version":3,"names":["redux","counterReducer","state","counter","action","type","coutner","store","createStore"],"sources":["/home/kfederer/code/federerkristijan/10-redux/src/store/index.js"],"sourcesContent":["import redux from \"redux\";\n\nconst counterReducer = (state = { counter: 0 }, action) => {\n  if (action.type === \"increment\") {\n    return {\n      coutner: state.counter + 1,\n    };\n  }\n\n  if (action.type === \"decrement\") {\n    return {\n      counter: state.counter - 1,\n    };\n  }\n\n  return state;\n};\n\n// Redux toolkit advices to replace configStore with createStore\nconst store = createStore(counterReducer);\n\nexport default store;\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,cAAc,GAAG,YAAoC;EAAA,IAAnCC,KAAmC,uEAA3B;IAAEC,OAAO,EAAE;EAAX,CAA2B;EAAA,IAAXC,MAAW;;EACzD,IAAIA,MAAM,CAACC,IAAP,KAAgB,WAApB,EAAiC;IAC/B,OAAO;MACLC,OAAO,EAAEJ,KAAK,CAACC,OAAN,GAAgB;IADpB,CAAP;EAGD;;EAED,IAAIC,MAAM,CAACC,IAAP,KAAgB,WAApB,EAAiC;IAC/B,OAAO;MACLF,OAAO,EAAED,KAAK,CAACC,OAAN,GAAgB;IADpB,CAAP;EAGD;;EAED,OAAOD,KAAP;AACD,CAdD,C,CAgBA;;;AACA,MAAMK,KAAK,GAAGC,WAAW,CAACP,cAAD,CAAzB;AAEA,eAAeM,KAAf"},"metadata":{},"sourceType":"module"}