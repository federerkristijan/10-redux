{"ast":null,"code":"import { legacy_createStore as createStore } from \"redux\";\nimport { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  counter: 0,\n  showCounter: true\n}; // createSlice preapres a slice of our global state\n\nconst counterSlice = createSlice({\n  name: 'counter',\n  initialState: initialState,\n  reducers: {\n    increment(state, action) {\n      state.counter++;\n    },\n\n    decrement(state) {\n      state.counter--;\n    },\n\n    increase(state, action) {\n      state.counter = state.counter + action.amount;\n    },\n\n    toggleCounter(state) {\n      state.showCounter = !state.showCounter;\n    }\n\n  }\n}); // \n// const counterReducer = (state = initialState, action) => {\n//   if (action.type === \"increment\") {\n//     return {\n//       counter: state.counter + 1,\n//       showCounter: state.showCounter\n//     };\n//   }\n//   if (action.type === 'increase') {\n//     return {\n//       counter: state.counter + action.amount,\n//       showCounter: state.showCounter\n//     };\n//   }\n//   if (action.type === \"decrement\") {\n//     return {\n//       counter: state.counter - 1,\n//       showCounter: state.showCounter\n//     };\n//   }\n//   if (action.type === 'toggle') {\n//     return {\n//       showCounter: !state.showCounter,\n//       counter: state.counter\n//     }\n//   }\n//   return state;\n// };\n// Redux toolkit advices to replace configStore with createStore, works jsut with legacy_crateStore\n\nconst store = createStore(counterReducer);\nexport default store;","map":{"version":3,"names":["legacy_createStore","createStore","createSlice","initialState","counter","showCounter","counterSlice","name","reducers","increment","state","action","decrement","increase","amount","toggleCounter","store","counterReducer"],"sources":["/home/kfederer/code/federerkristijan/10-redux/src/store/index.js"],"sourcesContent":["import {legacy_createStore as createStore } from \"redux\";\nimport { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = { counter: 0, showCounter: true };\n\n// createSlice preapres a slice of our global state\nconst counterSlice = createSlice({\n  name: 'counter',\n  initialState: initialState,\n  reducers: {\n    increment(state, action) {\n      state.counter++;\n    },\n    decrement(state) {\n      state.counter--;\n    },\n    increase(state, action) {\n      state.counter = state.counter + action.amount;\n    },\n    toggleCounter(state) {\n      state.showCounter = !state.showCounter;\n    },\n  }\n})\n\n// \n// const counterReducer = (state = initialState, action) => {\n//   if (action.type === \"increment\") {\n//     return {\n//       counter: state.counter + 1,\n//       showCounter: state.showCounter\n//     };\n//   }\n\n//   if (action.type === 'increase') {\n//     return {\n//       counter: state.counter + action.amount,\n//       showCounter: state.showCounter\n//     };\n//   }\n\n//   if (action.type === \"decrement\") {\n//     return {\n//       counter: state.counter - 1,\n//       showCounter: state.showCounter\n//     };\n//   }\n\n//   if (action.type === 'toggle') {\n//     return {\n//       showCounter: !state.showCounter,\n//       counter: state.counter\n//     }\n//   }\n\n//   return state;\n// };\n\n// Redux toolkit advices to replace configStore with createStore, works jsut with legacy_crateStore\nconst store = createStore(counterReducer);\n\nexport default store;\n"],"mappings":"AAAA,SAAQA,kBAAkB,IAAIC,WAA9B,QAAiD,OAAjD;AACA,SAASC,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,YAAY,GAAG;EAAEC,OAAO,EAAE,CAAX;EAAcC,WAAW,EAAE;AAA3B,CAArB,C,CAEA;;AACA,MAAMC,YAAY,GAAGJ,WAAW,CAAC;EAC/BK,IAAI,EAAE,SADyB;EAE/BJ,YAAY,EAAEA,YAFiB;EAG/BK,QAAQ,EAAE;IACRC,SAAS,CAACC,KAAD,EAAQC,MAAR,EAAgB;MACvBD,KAAK,CAACN,OAAN;IACD,CAHO;;IAIRQ,SAAS,CAACF,KAAD,EAAQ;MACfA,KAAK,CAACN,OAAN;IACD,CANO;;IAORS,QAAQ,CAACH,KAAD,EAAQC,MAAR,EAAgB;MACtBD,KAAK,CAACN,OAAN,GAAgBM,KAAK,CAACN,OAAN,GAAgBO,MAAM,CAACG,MAAvC;IACD,CATO;;IAURC,aAAa,CAACL,KAAD,EAAQ;MACnBA,KAAK,CAACL,WAAN,GAAoB,CAACK,KAAK,CAACL,WAA3B;IACD;;EAZO;AAHqB,CAAD,CAAhC,C,CAmBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;;AACA,MAAMW,KAAK,GAAGf,WAAW,CAACgB,cAAD,CAAzB;AAEA,eAAeD,KAAf"},"metadata":{},"sourceType":"module"}