{"ast":null,"code":"import { legacy_createStore as createStore } from \"redux\";\nimport { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  counter: 0,\n  showCounter: true\n}; // createSlice preapres a slice of our global state\n\ncreateSlice({\n  name: 'counter',\n  initialState: initialState,\n  reducers: {\n    increment() {},\n\n    decrement() {},\n\n    increase() {},\n\n    toggleCounter() {}\n\n  }\n});\n\nconst counterReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type === \"increment\") {\n    return {\n      counter: state.counter + 1,\n      showCounter: state.showCounter\n    };\n  }\n\n  if (action.type === 'increase') {\n    return {\n      counter: state.counter + action.amount,\n      showCounter: state.showCounter\n    };\n  }\n\n  if (action.type === \"decrement\") {\n    return {\n      counter: state.counter - 1,\n      showCounter: state.showCounter\n    };\n  }\n\n  if (action.type === 'toggle') {\n    return {\n      showCounter: !state.showCounter,\n      counter: state.counter\n    };\n  }\n\n  return state;\n}; // Redux toolkit advices to replace configStore with createStore, works jsut with legacy_crateStore\n\n\nconst store = createStore(counterReducer);\nexport default store;","map":{"version":3,"names":["legacy_createStore","createStore","createSlice","initialState","counter","showCounter","name","reducers","increment","decrement","increase","toggleCounter","counterReducer","state","action","type","amount","store"],"sources":["/home/kfederer/code/federerkristijan/10-redux/src/store/index.js"],"sourcesContent":["import {legacy_createStore as createStore } from \"redux\";\nimport { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = { counter: 0, showCounter: true };\n\n// createSlice preapres a slice of our global state\ncreateSlice({\n  name: 'counter',\n  initialState: initialState,\n  reducers: {\n    increment() {},\n    decrement() {},\n    increase() {},\n    toggleCounter() {},\n  }\n})\n\nconst counterReducer = (state = initialState, action) => {\n  if (action.type === \"increment\") {\n    return {\n      counter: state.counter + 1,\n      showCounter: state.showCounter\n    };\n  }\n\n  if (action.type === 'increase') {\n    return {\n      counter: state.counter + action.amount,\n      showCounter: state.showCounter\n    };\n  }\n\n  if (action.type === \"decrement\") {\n    return {\n      counter: state.counter - 1,\n      showCounter: state.showCounter\n    };\n  }\n\n  if (action.type === 'toggle') {\n    return {\n      showCounter: !state.showCounter,\n      counter: state.counter\n    }\n  }\n\n  return state;\n};\n\n// Redux toolkit advices to replace configStore with createStore, works jsut with legacy_crateStore\nconst store = createStore(counterReducer);\n\nexport default store;\n"],"mappings":"AAAA,SAAQA,kBAAkB,IAAIC,WAA9B,QAAiD,OAAjD;AACA,SAASC,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,YAAY,GAAG;EAAEC,OAAO,EAAE,CAAX;EAAcC,WAAW,EAAE;AAA3B,CAArB,C,CAEA;;AACAH,WAAW,CAAC;EACVI,IAAI,EAAE,SADI;EAEVH,YAAY,EAAEA,YAFJ;EAGVI,QAAQ,EAAE;IACRC,SAAS,GAAG,CAAE,CADN;;IAERC,SAAS,GAAG,CAAE,CAFN;;IAGRC,QAAQ,GAAG,CAAE,CAHL;;IAIRC,aAAa,GAAG,CAAE;;EAJV;AAHA,CAAD,CAAX;;AAWA,MAAMC,cAAc,GAAG,YAAkC;EAAA,IAAjCC,KAAiC,uEAAzBV,YAAyB;EAAA,IAAXW,MAAW;;EACvD,IAAIA,MAAM,CAACC,IAAP,KAAgB,WAApB,EAAiC;IAC/B,OAAO;MACLX,OAAO,EAAES,KAAK,CAACT,OAAN,GAAgB,CADpB;MAELC,WAAW,EAAEQ,KAAK,CAACR;IAFd,CAAP;EAID;;EAED,IAAIS,MAAM,CAACC,IAAP,KAAgB,UAApB,EAAgC;IAC9B,OAAO;MACLX,OAAO,EAAES,KAAK,CAACT,OAAN,GAAgBU,MAAM,CAACE,MAD3B;MAELX,WAAW,EAAEQ,KAAK,CAACR;IAFd,CAAP;EAID;;EAED,IAAIS,MAAM,CAACC,IAAP,KAAgB,WAApB,EAAiC;IAC/B,OAAO;MACLX,OAAO,EAAES,KAAK,CAACT,OAAN,GAAgB,CADpB;MAELC,WAAW,EAAEQ,KAAK,CAACR;IAFd,CAAP;EAID;;EAED,IAAIS,MAAM,CAACC,IAAP,KAAgB,QAApB,EAA8B;IAC5B,OAAO;MACLV,WAAW,EAAE,CAACQ,KAAK,CAACR,WADf;MAELD,OAAO,EAAES,KAAK,CAACT;IAFV,CAAP;EAID;;EAED,OAAOS,KAAP;AACD,CA9BD,C,CAgCA;;;AACA,MAAMI,KAAK,GAAGhB,WAAW,CAACW,cAAD,CAAzB;AAEA,eAAeK,KAAf"},"metadata":{},"sourceType":"module"}