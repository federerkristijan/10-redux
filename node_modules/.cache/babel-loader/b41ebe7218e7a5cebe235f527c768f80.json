{"ast":null,"code":"import { legacy_createStore as createStore } from \"redux\";\nimport { createSlice, configureStore } from \"@reduxjs/toolkit\";\nconst initialCounterState = {\n  counter: 0,\n  showCounter: true\n}; // createSlice preapres a slice of our global state\n\nconst counterSlice = createSlice({\n  name: \"counter\",\n  initialState: initialCounterState,\n  reducers: {\n    increment(state, action) {\n      state.counter++;\n    },\n\n    decrement(state) {\n      state.counter--;\n    },\n\n    increase(state, action) {\n      state.counter = state.counter + action.payload;\n    },\n\n    toggleCounter(state) {\n      state.showCounter = !state.showCounter;\n    }\n\n  }\n});\nconst initialAuthState = {\n  isAuthenticated: false\n};\nconst authSlice = createSlice({\n  name: \"auth\",\n  initialState: initialAuthState,\n  reducers: {\n    login(state) {\n      state.isAuthenticated = true;\n    },\n\n    logout(state) {\n      state.isAuthenticated = false;\n    }\n\n  }\n}); // Redux toolkit advices to replace configStore with createStore, works jsut with legacy_crateStore\n\nconst store = configureStore({\n  reducer: {\n    counter: counterSlice.reducer,\n    auth: authSlice.reducer\n  }\n});\nexport const counterActions = counterSlice.actions;\nexport const authActions = authSlice.actions;\nexport default store;","map":{"version":3,"names":["legacy_createStore","createStore","createSlice","configureStore","initialCounterState","counter","showCounter","counterSlice","name","initialState","reducers","increment","state","action","decrement","increase","payload","toggleCounter","initialAuthState","isAuthenticated","authSlice","login","logout","store","reducer","auth","counterActions","actions","authActions"],"sources":["/home/kfederer/code/federerkristijan/10-redux/src/store/index.js"],"sourcesContent":["import { legacy_createStore as createStore } from \"redux\";\nimport { createSlice, configureStore } from \"@reduxjs/toolkit\";\n\nconst initialCounterState = { counter: 0, showCounter: true };\n\n// createSlice preapres a slice of our global state\nconst counterSlice = createSlice({\n  name: \"counter\",\n  initialState: initialCounterState,\n  reducers: {\n    increment(state, action) {\n      state.counter++;\n    },\n    decrement(state) {\n      state.counter--;\n    },\n    increase(state, action) {\n      state.counter = state.counter + action.payload;\n    },\n    toggleCounter(state) {\n      state.showCounter = !state.showCounter;\n    },\n  },\n});\n\nconst initialAuthState = {\n  isAuthenticated: false,\n};\n\nconst authSlice = createSlice({\n  name: \"auth\",\n  initialState: initialAuthState,\n  reducers: {\n    login(state) {\n      state.isAuthenticated = true;\n    },\n    logout(state) {\n      state.isAuthenticated = false;\n    },\n  },\n});\n\n// Redux toolkit advices to replace configStore with createStore, works jsut with legacy_crateStore\nconst store = configureStore({\n  reducer: { counter: counterSlice.reducer, auth: authSlice.reducer },\n});\n\nexport const counterActions = counterSlice.actions;\nexport const authActions = authSlice.actions;\n\nexport default store;\n"],"mappings":"AAAA,SAASA,kBAAkB,IAAIC,WAA/B,QAAkD,OAAlD;AACA,SAASC,WAAT,EAAsBC,cAAtB,QAA4C,kBAA5C;AAEA,MAAMC,mBAAmB,GAAG;EAAEC,OAAO,EAAE,CAAX;EAAcC,WAAW,EAAE;AAA3B,CAA5B,C,CAEA;;AACA,MAAMC,YAAY,GAAGL,WAAW,CAAC;EAC/BM,IAAI,EAAE,SADyB;EAE/BC,YAAY,EAAEL,mBAFiB;EAG/BM,QAAQ,EAAE;IACRC,SAAS,CAACC,KAAD,EAAQC,MAAR,EAAgB;MACvBD,KAAK,CAACP,OAAN;IACD,CAHO;;IAIRS,SAAS,CAACF,KAAD,EAAQ;MACfA,KAAK,CAACP,OAAN;IACD,CANO;;IAORU,QAAQ,CAACH,KAAD,EAAQC,MAAR,EAAgB;MACtBD,KAAK,CAACP,OAAN,GAAgBO,KAAK,CAACP,OAAN,GAAgBQ,MAAM,CAACG,OAAvC;IACD,CATO;;IAURC,aAAa,CAACL,KAAD,EAAQ;MACnBA,KAAK,CAACN,WAAN,GAAoB,CAACM,KAAK,CAACN,WAA3B;IACD;;EAZO;AAHqB,CAAD,CAAhC;AAmBA,MAAMY,gBAAgB,GAAG;EACvBC,eAAe,EAAE;AADM,CAAzB;AAIA,MAAMC,SAAS,GAAGlB,WAAW,CAAC;EAC5BM,IAAI,EAAE,MADsB;EAE5BC,YAAY,EAAES,gBAFc;EAG5BR,QAAQ,EAAE;IACRW,KAAK,CAACT,KAAD,EAAQ;MACXA,KAAK,CAACO,eAAN,GAAwB,IAAxB;IACD,CAHO;;IAIRG,MAAM,CAACV,KAAD,EAAQ;MACZA,KAAK,CAACO,eAAN,GAAwB,KAAxB;IACD;;EANO;AAHkB,CAAD,CAA7B,C,CAaA;;AACA,MAAMI,KAAK,GAAGpB,cAAc,CAAC;EAC3BqB,OAAO,EAAE;IAAEnB,OAAO,EAAEE,YAAY,CAACiB,OAAxB;IAAiCC,IAAI,EAAEL,SAAS,CAACI;EAAjD;AADkB,CAAD,CAA5B;AAIA,OAAO,MAAME,cAAc,GAAGnB,YAAY,CAACoB,OAApC;AACP,OAAO,MAAMC,WAAW,GAAGR,SAAS,CAACO,OAA9B;AAEP,eAAeJ,KAAf"},"metadata":{},"sourceType":"module"}